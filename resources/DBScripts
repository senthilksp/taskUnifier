DROP TABLE contacts_;
DROP TABLE contexts_;
DROP TABLE folders_ ;
DROP TABLE goals_ ;
DROP TABLE locations_;
DROP TABLE notes_;
DROP TABLE tasks_;

CREATE TABLE contacts_
(
  modelid character varying(40) NOT NULL,
  modelstatus character varying(15),
  modelcreationdate date,
  modelupdatedate date,
  title character varying(70),
  order_id integer,
  firstname character varying(25),
  lastname character varying(25),
  email character varying(40),
  CONSTRAINT contacts_pkey PRIMARY KEY (modelid )
)


CREATE TABLE contexts_
(
  modelid character varying(40) NOT NULL,
  modelstatus character varying(15),
  modelcreationdate date,
  modelupdatedate date,
  title character varying(70),
  order_id integer,
  CONSTRAINT contexts_pkey PRIMARY KEY (modelid )
)

CREATE TABLE folders_
(
  modelid character varying(40) NOT NULL,
  modelstatus character varying(15),
  modelcreationdate date,
  modelupdatedate date,
  title character varying(70),
  order_id integer,
  archived boolean,
  CONSTRAINT folders_pkey PRIMARY KEY (modelid )
)

CREATE TABLE goals_
(
  modelid character varying(40) NOT NULL,
  modelstatus character varying(15),
  modelcreationdate date,
  modelupdatedate date,
  title character varying(70),
  order_id integer,
  level character varying(10),
  archived boolean,
  color character varying(10),
  CONSTRAINT goals_pkey PRIMARY KEY (modelid )
)

CREATE TABLE locations_
(
  modelid character varying(40) NOT NULL,
  modelstatus character varying(15),
  modelcreationdate date,
  modelupdatedate date,
  title character varying(70),
  order_id integer,
  level character varying(10),
  latitude real,
  longitude real,
  CONSTRAINT locations_pkey PRIMARY KEY (modelid )
)

CREATE TABLE notes_
(
  modelid character varying(40) NOT NULL,
  modelstatus character varying(15),
  modelcreationdate date,
  modelupdatedate date,
  title character varying(70),
  order_id integer,
  CONSTRAINT notes_pkey PRIMARY KEY (modelid )
)


CREATE TABLE tasks_
(
  modelid character varying(40) NOT NULL,
  modelstatus character varying(15),
  modelcreationdate date,
  modelupdatedate date,
  title character varying(70),
  order_id integer,
  parent character varying(40),
  progress real,
  completed boolean,
  startdate date,
  start_date_reminder integer,
  duedate date,
  due_date_remainder integer,
  repeat character varying(15),
  repeat_from character varying(15),
  status character varying(10),
  length integer,
  timer integer,
  priority character varying(8),
  star boolean,
  note character varying(45),
  client_id character varying(8) NOT NULL,
  issue_id character varying(30),
  user_id integer,
  CONSTRAINT tasks_pkey PRIMARY KEY (modelid ),
  CONSTRAINT clients_client_id_fkey FOREIGN KEY (client_id)
      REFERENCES clients_ (client_id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT tasks__user_id_fkey FOREIGN KEY (user_id)
      REFERENCES user_ (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)

 
 CREATE TABLE clients_
(
  client_id character varying(8) NOT NULL,
  client_desc character varying(20),
  creationdate date,
  updatedate date,
  CONSTRAINT clients_pkey PRIMARY KEY (client_id )
)
 
   create table task_history_(
   id serial NOT NULL,
   task_id character varying(40),
   comments character varying(70),
   status character varying(10),
   creationdate date,
   bug_track_number character varying(10),
   CONSTRAINT history_task_id_fkey FOREIGN KEY (task_id)
      REFERENCES tasks_ (modelid) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
 )
 
 One task is associated with no-contacts or single-contact or multiple-contacts.
 The same logic applies for contexts, goals, locations.
 The following tables are created for this purpose.
  
 
CREATE TABLE task_contacts_
(
  task_id character varying(40),
  contact_id character varying(40),
  
  CONSTRAINT task_contacts_contact_id_fkey FOREIGN KEY (contact_id)
      REFERENCES contacts_ (modelid) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT task_contacts_task_id_fkey FOREIGN KEY (task_id)
      REFERENCES tasks_ (modelid) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)
 
  CREATE TABLE task_contexts_
	(
	  task_id character varying(40),
	  context_id character varying(40),
	  
	  CONSTRAINT task_contexts_context_id_fkey FOREIGN KEY (context_id)
	      REFERENCES contexts_ (modelid) MATCH SIMPLE
	      ON UPDATE NO ACTION ON DELETE NO ACTION,
	  CONSTRAINT task_contexts_task_id_fkey FOREIGN KEY (task_id)
	      REFERENCES tasks_ (modelid) MATCH SIMPLE
	      ON UPDATE NO ACTION ON DELETE NO ACTION
	)
 

CREATE TABLE task_locations_
	(
	  task_id character varying(40),
	  location_id character varying(40),
	  
	  CONSTRAINT task_locations_location_id_fkey FOREIGN KEY (location_id)
	      REFERENCES locations_ (modelid) MATCH SIMPLE
	      ON UPDATE NO ACTION ON DELETE NO ACTION,
	  CONSTRAINT task_locations_task_id_fkey FOREIGN KEY (task_id)
	      REFERENCES tasks_ (modelid) MATCH SIMPLE
	      ON UPDATE NO ACTION ON DELETE NO ACTION
	)
	
	
	CREATE TABLE task_goals_
	(
	  task_id character varying(40),
	  goal_id character varying(40),
	  
	  CONSTRAINT task_goals_goal_id_fkey FOREIGN KEY (goal_id)
	      REFERENCES goals_ (modelid) MATCH SIMPLE
	      ON UPDATE NO ACTION ON DELETE NO ACTION,
	  CONSTRAINT task_goals_task_id_fkey FOREIGN KEY (task_id)
	      REFERENCES tasks_ (modelid) MATCH SIMPLE
	      ON UPDATE NO ACTION ON DELETE NO ACTION
	)
	
	CREATE TABLE task_tags_
(
  task_id character varying(40),
  tag_id character varying(40),
  CONSTRAINT task_tags_tag_id_fkey FOREIGN KEY (tag_id)
      REFERENCES contexts_ (modelid) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT task_tagss_task_id_fkey FOREIGN KEY (task_id)
      REFERENCES tasks_ (modelid) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)

CREATE TABLE user_
(
  id serial NOT NULL,
  user_name character varying(45) NOT NULL,
  CONSTRAINT user_pkey PRIMARY KEY (id ),
  CONSTRAINT user_user_name_key UNIQUE (user_name )
)
WITH (
  OIDS=FALSE
);
ALTER TABLE user_
  OWNER TO postgres;



 	 